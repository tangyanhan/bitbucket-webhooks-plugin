{namespace nl.topicus.templates}

/**
 * @param repository Repository object
 * @param configurations
 * @param error
 */
{template .repositorySettings}
<html>
<head>
    <meta name="decorator" content="bitbucket.repository.settings">
    <meta name="projectKey" content="{$repository.project.key}">
    <meta name="repositorySlug" content="{$repository.slug}">
    <meta name="activeTab" content="repository-settings-plugin-tab-dcs">
    <title>{$repository.slug} / Webhooks</title>
</head>
<body>
    {if $error}
      <div style="color: #BF3333; background-color: #DDDDDD"><div style="padding: 15px"><b>ERROR:</b> {$error}</b></div></div>
    {/if}
    <header class="aui-page-header">
        <div class="aui-page-header-inner">
            <div class="aui-page-header-main">
                <h2>DCS Webhooks</h2>
            </div>
            <div class="aui-page-header-actions">
            </div>
        </div>
    </header>
    <div class="page-description">
        <p>Webhooks allow you to extend what Bitbucket does when the repository changes (for example, new code is pushed or a pull request is merged).</p>
        <p/>
        <p>These webhooks are managed by dcs-bitbucket-webhooks plugin</p>
        <p>Push events and pullrequest events are enabled by default when a new webhook is created(branch/tag create, pullrequest create/update/reopen)</p>
    </div>
    <div>
        <p>
            <a href="?edit" class="aui-button  aui-button-primary">Add webhook</a>
        </p>
        <table class="aui">
            <thead>
            <tr>
                <th id="title">Title</th>
                <th id="url">URL</th>
                <th id="committersToIgnore">Committers to Ignore</th>
                <th id="branchesToIgnore">Branches to Ignore</th>
                <th id="action">Actions</th>
            </tr>
            </thead>
            <tbody>
            {foreach $configuration in $configurations}
                <tr>
                    <td headers="title">
                    {$configuration.title}
                    {if $configuration.enabled}{else}<span style="margin-left:5px;" class="aui-lozenge aui-lozenge-default">Inactive</span>
                    {/if}
                    </td>
                    <td headers="url">{$configuration.URL}</td>
                    <td headers="committersToIgnore">{if $configuration.committersToIgnore}{$configuration.committersToIgnore}{/if}</td>
                    <td headers="branchesToIgnore">{if $configuration.branchesToIgnore}{$configuration.branchesToIgnore}{/if}</td>
                    <td class="action" headers="action">
                        <ul class="menu">
                            <li>
                                <a href="?edit&id={$configuration.ID}">Edit</a>
                            </li>
                            <li>
                                <a href="?delete&id={$configuration.ID}">Delete</a>
                            </li>
                        </ul>
                    </td>
                </tr>
            {ifempty}
                 <tr>
                     <td colspan="4" style="text-align:center;">No webhooks configured.</td>
                 </tr>
            {/foreach}
            </tbody>
        </table>
    </div>
</body>
</html>
{/template}


/**
 * @param repository Repository object
 * @param configuration configuration object
 */
{template .edit}
   <html>
   <head>
       <meta name="decorator" content="bitbucket.repository.settings">
       <meta name="projectKey" content="{$repository.project.key}">
       <meta name="repositorySlug" content="{$repository.slug}">
       <meta name="activeTab" content="repository-settings-plugin-tab-dcs">
       <title>{$repository.slug} / Webhooks</title>
   </head>
   <body>
       <header class="aui-page-header">
           <div class="aui-page-header-inner">
               <div class="aui-page-header-main">
                   <ol class="aui-nav aui-nav-breadcrumbs">
                     <li><a class="active" href="?">Webhooks</a></li>
                   </ol>
                   {if $configuration}
                   <h2>Edit {$configuration.title}</h2>
                   {else}
                   <h2>Add new webhook</h2>
                   {/if}
               </div>
           </div>
       </header>
       {call aui.form.form}
         {param action: '' /}
         {param content}
           {call aui.group.group}
             {param content}
               {call aui.form.textField}
                 {param id: 'title' /}
                 {param legendContent: 'Title' /}
                 {param labelContent: 'Title' /}
                 {param value:  $configuration ? $configuration.title : '' /}
               {/call}
               {call aui.form.textField}
                 {param id: 'url' /}
                 {param legendContent: 'URL' /}
                 {param labelContent: 'URL' /}
                 {param value:  $configuration ? $configuration.URL : '' /}
               {/call}
               {call aui.form.textField}
                 {param id: 'committersToIgnore' /}
                 {param legendContent: 'Committers to ignore' /}
                 {param labelContent: 'Committers to ignore' /}
                 {param descriptionText: 'Comma separated list of usernames. Commits from these users do not trigger this hook. Example: john.doe,jane.doe' /}
                 {param value:  $configuration ? $configuration.committersToIgnore : '' /}
               {/call}
               {call aui.form.textField}
                 {param id: 'branchesToIgnore' /}
                 {param legendContent: 'Branches to ignore' /}
                 {param labelContent: 'Branches to ignore' /}
                 {param descriptionText: 'regex for branches. Commits on these branches do not trigger this hook. Example: release/.*' /}
                 {param value:  $configuration ? $configuration.branchesToIgnore : '' /}
               {/call}
               {call aui.form.checkboxField}
                 {param legendContent: 'Status' /}
                 {param fields: [[
                   'id': 'enabled',
                   'labelText': 'Active',
                   'isChecked': $configuration ? $configuration.enabled : true,
                   'descriptionText': 'Inactive webhooks don\'t trigger requests'
                 ]] /}
               {/call}
             {/param}
           {/call}
           {call aui.group.group}
             {param content}
                <h3>Repository events:</h3>
                {call aui.form.checkboxField}
                 {param legendContent: '' /}
                 {param fields: [[
                   'id': 'isRepoPush',
                   'labelText': 'On push',
                   'isChecked': $configuration ? $configuration.repoPush : false
                 ]] /}
                {/call}
                {call aui.form.checkboxField}
                 {param legendContent: '' /}
                 {param fields: [[
                   'id': 'isBranchCreated',
                   'labelText': 'Branch created',
                   'isChecked': $configuration ? $configuration.branchCreated : false
                 ]] /}
                {/call}
                {call aui.form.checkboxField}
                 {param legendContent: '' /}
                 {param fields: [[
                   'id': 'isBranchDeleted',
                   'labelText': 'Branch deleted',
                   'isChecked': $configuration ? $configuration.branchDeleted : false
                 ]] /}
                {/call}
                {call aui.form.checkboxField}
                 {param legendContent: '' /}
                 {param fields: [[
                   'id': 'isTagCreated',
                   'labelText': 'Tag Created',
                   'isChecked': $configuration ? $configuration.tagCreated : false
                 ]] /}
                {/call}
                {call aui.form.checkboxField}
                 {param legendContent: '' /}
                 {param fields: [[
                   'id': 'isBuildStatus',
                   'labelText': 'Build Status',
                   'isChecked': $configuration ? $configuration.buildStatus : false
                 ]] /}
                {/call}

             {/param}
           {/call}
           {call aui.group.group}
             {param content}
                <h3>Pull request events:</h3>
                {call aui.form.checkboxField}
                 {param legendContent: '' /}
                 {param fields: [[
                   'id': 'isPrCreated',
                   'labelText': 'Pull request created',
                   'isChecked': $configuration ? $configuration.prCreated : false
                 ]] /}
                {/call}
                {call aui.form.checkboxField}
                 {param legendContent: '' /}
                 {param fields: [[
                   'id': 'isPrUpdated',
                   'labelText': 'Pull request updated',
                   'isChecked': $configuration ? $configuration.prUpdated : false
                 ]] /}
                {/call}
                {call aui.form.checkboxField}
                 {param legendContent: '' /}
                 {param fields: [[
                   'id': 'isPrMerged',
                   'labelText': 'Pull request merged',
                   'isChecked': $configuration ? $configuration.prMerged : false
                 ]] /}
                {/call}
                {call aui.form.checkboxField}
                 {param legendContent: '' /}
                 {param fields: [[
                   'id': 'isPrDeclined',
                   'labelText': 'Pull request declined',
                   'isChecked': $configuration ? $configuration.prDeclined : false
                 ]] /}
                {/call}
                {call aui.form.checkboxField}
                 {param legendContent: '' /}
                 {param fields: [[
                   'id': 'isPrReopened',
                   'labelText': 'Pull request re-opened',
                   'isChecked': $configuration ? $configuration.prReopened : false
                 ]] /}
                {/call}
                {call aui.form.checkboxField}
                 {param legendContent: '' /}
                 {param fields: [[
                   'id': 'isPrRescoped',
                   'labelText': 'Pull request re-scoped',
                   'isChecked': $configuration ? $configuration.prRescoped : false
                 ]] /}
                {/call}
                {call aui.form.checkboxField}
                 {param legendContent: '' /}
                 {param fields: [[
                   'id': 'isPrCommented',
                   'labelText': 'Pull request commented',
                   'isChecked': $configuration ? $configuration.prCommented : false
                 ]] /}
                {/call}
             {/param}
           {/call}
           {call aui.group.group}
             {param content}
               <br />
               {call aui.form.buttons}
                 {param content}
                   {call aui.form.submit}
                     {param id: 'submit' /}
                     {param text: 'Save' /}
                     {param type: 'primary' /}
                   {/call}
                   {call aui.form.button}
                     {param id: 'cancel' /}
                     {param text: 'Cancel' /}
                     {param type: 'link' /}
                     {param href: '?' /}
                   {/call}
                 {/param}
               {/call}
             {/param}
           {/call}
         {/param}
       {/call}
   </body>
   </html>
{/template}
